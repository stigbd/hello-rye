[project]
name = "hello-rye"
version = "0.1.0"
description = "Add your description here"
authors = [{ name = "Stig B. Dørmænen", email = "stigbd@gmail.com" }]
dependencies = []
readme = "README.md"
requires-python = ">= 3.8"

[project.scripts]
"hello-rye" = "hello_rye:main"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.rye]
managed = true
dev-dependencies = ["pytest~=8.3.3", "pyright~=1.1.385", "pytest-cov~=5.0.0"]

[tool.rye.scripts]
fmt = "rye fmt"
lint = "rye lint --fix"
check = "pyright"
test = "rye test -- -rA --cov --cov-report term --cov-report html"
all = { chain = ["fmt", "lint", "check", "test"] }

[tool.coverage.paths]
source = ["hello_rye"]

[tool.coverage.run]
branch = true
omit = ["tests/*"]

[tool.coverage.report]
fail_under = 100
show_missing = true

[tool.ruff.lint]
select = ["ALL"]
# and then manually ignore annoying ones:
ignore = [
    #     "ANN401", # Any should be allowed
    "D211",
    "D213",
    "COM812",
    "D203",
    "ISC001",
]
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    #     "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
    #     "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]

[tool.ruff.lint.isort]
# so it knows to group first-party stuff last
known-first-party = ["hello_rye"]

[tool.pyright]
venvPath = "."       # rye installs the venv in the current dir
venv = ".venv"       #       in a folder called `.venv`
strict = ["**/*.py"] # use 'strict' checking on all files
